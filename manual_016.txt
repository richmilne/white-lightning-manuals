# TODO: Remove this comment once this file has been proofread

A) SPRITE HEIGHT = 2 B) SPRITE (.e:w,,TH = 2
C) SPRITE KASBER = 19
D) DR40RY LEFT = The remaining memory for sprites.

E) SPRITE	= Start address of sprite being tested.

A function is provided to Wipe a sprite from savory and adjust pointers. Leave everything as it is and try:

1. Press W (Wipe sprite) - remember sprite 19 has already been defined. Respond to the prarpt with Y.

T (Test sprite) and an error message will appear on the text line -

r. ru ea EX=srs.

While we are considering error messages, have a go at this: 1. Press Z(Arcade Character) and then press 63.

2. Press S (Sprite Number) and press 12 - an error message will appear, SPRITE ALREADY DEN'IIZED. Sprite number 12 is not corrupted in any way, nor is the one you have put to the screen. All that you need to do is choose a different sprite

number which has not already been allocated.

There's one area we've been avoiding all the way through - the Logic Functions.
We don't Fant to wade into the depths of Boolean algebra here, but instead, provide a few examples which hopefully show the application of the )DR, OR and AND operations to tqis part of the package. They are provided for advanced applications only and their results are summarised on the sprite generator panel. Let's see what they do:

1. Clear the sprite screen and position the cursors to X PUS 1 Y P)S 1. 2. Press X(INK) and set to 3 (magenta). 3. Press C(PAPPR) and set to 0 (black). 4. Press V(PLASF3) and set to 0.

5. Press B(BRIGHP) and set to 1.

6. Press A(ATII2) and set to 1.

7. Press Z (Arcade Character) and enter 149 (Robot).

8. Press L(Lagth) and enter 2, then press fl(He19ht) and enter 2.

9. Press S (Sprite Number) and enter 21, then G(GET) to Get the sprite. 10. Move the x cursor by +2.

ll. Press P(PUt) and respond to the prompt with 1. 12. Press Z (Arcade Character) and enter 151 (Robot). 13. Press O(LOgical Sprite Functions) and press 1.
15
14. Move the X cursor by +2.

15. Press P(P(If) aqd respond with 1- the characters have been •Q2g1" (merged). Let's take this a little further and OR with the screen: 1. Clear the sprite screen and position the cursors to X POS 1 Y SOS 1.

2. Press X(INR) and set to 1 (blue).

3. Press C (PAPER) and set to 7 (white). 4. Press V(PLASH) and set to 0. 5. Press B(HiiGBT) and set to 1. 6. Press A(ATTR) and set to 1.

7. Press 2(Arcade Character) and enter 141 (Explosion) - you probably think we're going to blow up the Robot!

8. Press L(Length) and enter 2, then press H(HeighU and enter 2. 9. Press S (Sprite Number) and enter 22, then G(GEP) sprite 22. 10. Move the X cursor by +2.

11. Press Z (Arcade Character) and enter 149 (Robot).

12. Press P(PU1') and enter 2 - sprite number 22 has been "CRed" with whatever was on the screen.

13. Move the X cursor by +2.

14. Press P(PUC) and enter 1- the explosion was unaffected!


Now let's take a look at a second logical operation - the AND function: 1. Clear the sprite screen and position the cursors to X PUS 1 Y POS 1.

2. Press P(PVP) and enter 4, sprite 22 has been "ANDed" with the screen - as the screen was empty, nothing happened.

3. Press P(PLT) and enter 1 - the sprite is still there!


Now, lastly, let's look at the )DR function:

1. Clear the sprite screen and mwe the cursors to X PUS 1 Y POS 1. 2. Press Z(Arcade Character) and enter 151 (Robot).

3. Press P (PUT) and enter 3 - the Robot has blown up! (At last I here you say !).
16