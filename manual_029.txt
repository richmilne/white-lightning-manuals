0=      :  This will leave a true flag on the top of the stack if the number on
           the top of the stack is equal to zero, otherwise it will leave a
           false flag.


<       :  This will leave a true flag if the second number on the stack is less
           than the top number, otherwise it will leave a false flag.

e.g.    40 25 < . <CR>
will print 0 (false flag).

If we look at the stack during this operation we will see:

          Operation              TOS
             40                   40
             25                40 25
              <                    0
              .                empty


>       :  This will leave a true flag if the second number on the stack is
           greater than the top number, else a false flag will be left.

e.g.    40 25 > . <CR>
will print 1 (true flag).


=       :  This will leave a true flag if the two top numbers are equal,
           otherwise it will leave a false flag.

Now for some examples using the conditional branching structures, type:

: TEST= = IF ." BOTH ARE EQUAL " ENDIF ." FINISHED " ; <CR>

Now key in two numbers followed by TEST= and a carriage return.

e.g.    11 119 TEST= <CR>
This will print FINISHED

        119 119 TEST= <CR>
will print BOTH ARE EQUAL FINISHED

Now key in:
: TEST1= = IF ." EQUAL " ELSE ." UNEQUAL " ENDIF CR ." FINISHED " ; <CR>

Now key in:
        249 249 TEST1= <CR>
this will print EQUAL
                FINISHED

Try:    249 248 TEST1= <CR>
this will print UNEQUAL
                FINISHED

Notice how the part after ENDIF was executed in both cases.

Two more loop structures will now be discussed: