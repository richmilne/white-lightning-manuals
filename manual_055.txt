# TODO: Remove this comment once this file has been proofread

Crnm3nd    Action

WCRM    Vertical scroll with wrap
SCRM    Vertical scroll, no wrap

Exairple:

To scroll sprite 5 downward by 11 pixels with wrap, use: 5 SPN ! -11 NPX ! WC~ft


Auribute Scrolls

There are four commands to scroll attributes in any of the four directions: Parameter    Use

SPN    Number of the sprite to be scrolled

Command    Action

ATTLM Scroll attributes left with wrap ATTRM Scroll attributes right with wrap ATTUPM Scroll attributes up with wrap ATTDNM    Scroll attributes down with wrap


GETS AND PUTS

There are three groups of GEfs and PVI`s. The first, and the fastest, carry out operations between a full sprite and a previously defined window of the screen. The second group carry out operations between sprite windows and screen windows. The third, and probably most powerful group of orntranda in the sub-language, cover operations between sprite windows and other sprites.

Suppose you have desiged a sprite 160 characters wide (5 screens) and you wish to smoothly pixel scroll through this sprite via a screen window oovering the bottom five character rows of the screen. A second dumny sprite, 1 character wider than the screen can be used to GET from the larger sprite, scroll, PM, scroll, Put and so m for 1 character, then a second block, 1 character further into the larger sprite can be GOT and so on. 6`xperinentation will soon show you how to do this. These routines can be run in background to provide fast soooth scrolling backdrops.


Group 1

This group provides block moves and logical operations between sprites and screen windows - these are the fastest mnnznds in the set. This particular group does not include seperate attribute commands but instead uses an attribute witch. If the witch is m, pixel data and attribute data are moved; if you do not require to move attributes you can increase the speed of operations by switching off the attribute switch.
55
Commend    ction

ATTON Enable the flow of attribute data between the sprite and the screen
window
ATTOFF Diaah)e the flow of attributes between the sprite and the screen
window

We m.i come to the group 1 oamsvnds themselves: GETS

Parameter    Use

SPN    Number of the sprite to be used (1 to 255)
COL    Left hand colurtnt of target screen window (0 to 31)
ROW    Top row of target screen window (0 to 23)

Ccmmand    Action

GETBLS    Block move screen window into sprite
GETORS    OR screen window into sprite
GETXRS    )OR screen window into sprite
GETNDS    AND screen window into sprite

Note:

The dimensions of the screen window are taken as the dimensions of the sprite. If the command doesn't execute, it is almost certainly because the width of the sprite +COL or the height of the sprite + ROW, exceed 32 or 24 respectively, so that part of the window lies off the screen. sprites must be previously set up either by the developanent software, or the ODLD$ and SPRITE or ISPRITE commands before these commands will execute.

Example:

To GEC a screen sprite into sprite number 4 from column 5, row 4, with attributes and "OR" it with the data currently held in sprite number 4, use the following:

4 SPN ! 5 OOL ! 4 ROW ! A170N GEIORS

Note that if ATZON was the last witch cannvxi, it would rot be needed in the above,


PUTS

These o6miands are identical to the group 1"(EIS" except that data transfer is from the sprite to the screen. The results of the various operations are therefore displayed to the screen. The parameters are identical in operation to those of the "Q:15", and the AT70N and ATIOFP switch commands also apply.


Parameter    Use

SPN    Number of the sprite to he used (l to 255)
NL    Left hand column of target screen window (0 to 31)
ROW    Top row of target screen window (0 to 23)
5ti