For the purposes of the following examples, let us refer to the numbers on the
stack as follows:

 N1  =  top    number on stack (i.e. first to be removed)
 N2  =  second number on stack (i.e. second to be removed)
 N3  =  third  number on stack (i.e. third to be removed)

To demonstrate this, let us push three numbers onto the stack by typing:

        HEX 01FA 0019 1F47 <CR>

The stack will look like this:

        1F47    Top of stack
        0019
        01FA

Note that this illustrates the property of the stack, that it is, Last In First
Out or LIFO; therefore we have:

        N1  =  1F47
        N2  =  0019
        N3  =  01FA

So if we type:

        CR . CR . CR . CR <CR>

We get  1F47
          19
         1FA

We will now resume our explanation of the mathematical operators.


**-**       :  This will subtract the top number on the stack from the second number
           on the stack and leave the result as the top number.
i.e.    N1 = N2 - N1

e.g.    Decimal 7 11 - . <CR>
will print -4, since the stack would contain

        N1     ll    TOS (Top of stack)
        N2      7

before the subtraction, and

        N1     -4    TOS

after the subtraction.


*** **       : This will multiply the top two numbers on the stack and leave the
          result on the top of the stack.
i.e.    N1 = N1 x N2

e.g.    DECIMAL 140 20 * . <CR>
would print 2800